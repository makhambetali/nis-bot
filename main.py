import telebot
from telebot import types
from descriptive_variables import *             
import openai
import time
import os

openai.api_key = "OPENAI_TOKEN"

bot = telebot.TeleBot('BOT_TOKEN')#token code

print('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')
def detect_user_activity(message):
    user_info = dict()

    user_info['id'] = message.from_user.id
    user_info['username'] = message.from_user.username
    user_info['firstname'] = message.from_user.first_name
    user_info['lastname'] = message.from_user.last_name
    user_info['request'] = message.text.replace('‚óÄÔ∏è', '')
    user_info['time'] =  time.strftime('%d.%m.%Y –≥. %H:%M:%S')
    with open("doc.txt", "a", encoding='cp1251') as f:
        f.write(str(user_info))
        f.write('\n')
    
    print(user_info)


def main_buttons(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    btn_school = types.KeyboardButton('–û –®–∫–æ–ª–µ')
    btn_exams = types.KeyboardButton('–≠–∫–∑–∞–º–µ–Ω—ã')
    btn_universities = types.KeyboardButton('–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≤—É–∑—ã')
    btn_help = types.KeyboardButton('–ü–æ–º–æ—â—å —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π')
    btn_sources = types.KeyboardButton('–ò—Å—Ç–æ—á–Ω–∏–∫–∏')
    btn_mektepomiri = types.KeyboardButton('–®–∫–æ–ª—å–Ω–∞—è –∂–∏–∑–Ω—å')


    markup.add(btn_school, btn_mektepomiri)
    markup.row(btn_exams, btn_sources)
    markup.row(btn_universities, btn_help)
    
    
    return markup
    
    
@bot.message_handler(commands=['start'])
def start(message):
    mes = f'üëã –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>. –Ø —Ç–≤–æ–π NIS –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç'
    markup = main_buttons(message)
    bot.send_message(message.chat.id, mes, parse_mode='html', reply_markup=markup)
    
    
    
@bot.message_handler(func=lambda _:True)
def get_user_text(message):
    detect_user_activity(message)
    os.system('C:\school_bot\doc.txt')
    user_message = message.text.lower()
    
    if user_message == '–æ —à–∫–æ–ª–µ':
        markup = types.InlineKeyboardMarkup()
        btn_mission = types.InlineKeyboardButton('üéØ –ú–∏—Å—Å–∏—è —à–∫–æ–ª—ã', callback_data='mission')
        btn_values = types.InlineKeyboardButton('üß© –¶–µ–Ω–Ω–æ—Å—Ç–∏ —à–∫–æ–ª—ã', callback_data="values")
        btn_all =types.InlineKeyboardButton('üìÑ –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Å—å –¥–æ–∫—É–º–µ–Ω—Ç', callback_data='all_print')   
        btn_tarbie =types.InlineKeyboardButton('üìî –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å', callback_data='tarbie')    
                                                                                                                                                                     
        
        
        markup.row(btn_mission, btn_values)
        markup.add(btn_tarbie)
        markup.add(btn_all)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=markup)
    
    elif user_message == '—à–∫–æ–ª—å–Ω–∞—è –∂–∏–∑–Ω—å':
        markup = types.InlineKeyboardMarkup()
        btn_shanyrak = types.InlineKeyboardButton('–®–∞–Ω—ã—Ä–∞–∫–∏', callback_data='shanyrak')
        btn_tutor =types.InlineKeyboardButton('–ö—É—Ä–∞—Ç–æ—Ä—ã', callback_data='tutor')    
                                                                                                                                                                     
        
        
        markup.row(btn_shanyrak)
        markup.add(btn_tutor)
  
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=markup)

    elif user_message == 'ielts':
        markup = types.InlineKeyboardMarkup()
        btn_structer = types.InlineKeyboardButton('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫–∑–∞–º–µ–Ω–∞', callback_data='ielts_structure')
        btn_tips = types.InlineKeyboardButton('–°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data="ielts_tips")                                                                                                                                                                  
        
        
        markup.add(btn_structer)
        markup.add(btn_tips)
        markup.add(types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', url = 'https://drive.google.com/drive/u/0/folders/1wX7YGbWc3wAqxEsZtKwjQ9xujiwzrDoI?direction=a'))
        markup.add(types.InlineKeyboardButton('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ', url = 'https://kazakhstan.britishcouncil.org/ru/exam/ielts/book-test?gclid=CjwKCAjwvdajBhBEEiwAeMh1U94w6-QRxKrJS90jrWzboqDANCuZ210LlzMhuwOemjodPv95aZgAzxoCsQwQAvD_BwE'))
        bot.send_message(message.chat.id,  IELTS_ABOUT_STR, parse_mode='html', reply_markup=markup)
    
    

    elif user_message == '—ç–∫–∑–∞–º–µ–Ω—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn0 = types.KeyboardButton('‚óÄÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn1 = types.KeyboardButton('SAT')
        btn2 = types.KeyboardButton('IELTS')
        btn3 = types.KeyboardButton('–ú–≠–°–ö')
        
        markup.add(btn0, btn1, btn2, btn3)
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=markup)
    elif user_message == 'sat':
        markup = types.InlineKeyboardMarkup()
        btn_structer1 = types.InlineKeyboardButton('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫–∑–∞–º–µ–Ω–∞', callback_data='sat_structure')
        btn_tips1 = types.InlineKeyboardButton('–°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data="sat_tips")                                                                                                                                                                  
        btn_sources1 = types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data='sat_sources')

        markup.add(btn_structer1)
        markup.add(btn_tips1)
        markup.add(btn_sources1)
        markup.add(types.InlineKeyboardButton('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ', url = 'https://satsuite.collegeboard.org/sat/registration'))
        bot.send_message(message.chat.id, SAT_ABOUT_STR, parse_mode='html', reply_markup=markup)

    elif user_message == '–º—ç—Å–∫':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn4 = types.KeyboardButton('‚óÄÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn5 = types.KeyboardButton('10 –∫–ª–∞—Å—Å')
        btn6 = types.KeyboardButton('11 –∫–ª–∞—Å—Å')
        btn7 = types.KeyboardButton('12 –∫–ª–∞—Å—Å')
        
        markup.add(btn5, btn6, btn7, btn4)
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å", reply_markup=markup)
    
    elif user_message == '10 –∫–ª–∞—Å—Å':
        markup = types.InlineKeyboardMarkup()
        btn_subjects = types.InlineKeyboardButton('–ü—Ä–µ–¥–º–µ—Ç—ã', callback_data='mesk_grade_10_subjects')                                                                                                                                                                
        btn_sources2 = types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data='mesk_grade_10_sources')

        markup.row(btn_subjects,btn_sources2)
        bot.send_message(message.chat.id, MESK_GRADE_10_ABOUT_STR, parse_mode='html', reply_markup=markup)
    
    elif user_message == '11 –∫–ª–∞—Å—Å':
        markup = types.InlineKeyboardMarkup()
        btn_subjects11 = types.InlineKeyboardButton('–ü—Ä–µ–¥–º–µ—Ç—ã', callback_data='mesk_grade_11_subjects')                                                                                                                                                                
        btn_sources11 = types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data='mesk_grade_11_sources')

        markup.row(btn_subjects11,btn_sources11)
        bot.send_message(message.chat.id, MESK_GRADE_11_ABOUT_STR, parse_mode='html', reply_markup=markup)
    
    elif user_message == '12 –∫–ª–∞—Å—Å':
        markup = types.InlineKeyboardMarkup()
        btn_subjects12 = types.InlineKeyboardButton('–ü—Ä–µ–¥–º–µ—Ç—ã', callback_data='mesk_grade_12_subjects')                                                                                                                                                                
        btn_sources12 = types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ', callback_data='mesk_grade_12_sources')

        markup.row(btn_subjects12,btn_sources12)
        bot.send_message(message.chat.id, MESK_GRADE_12_ABOUT_STR, parse_mode='html', reply_markup=markup)
    
    elif user_message == '–¥–æ–∫—É–º–µ–Ω—Ç—ã':
        markup = types.InlineKeyboardMarkup()
        btn_subjects5 = types.InlineKeyboardButton('–°—Ç—Ä–∞–Ω–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data='strana_programma')                                                                                                                                                                
        btn_sources5 = types.InlineKeyboardButton('–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data='finances')
                                                                                                                                                                   
        btn_sources55 = types.InlineKeyboardButton('–°—Ç—Ä–∞—Ç–µ–≥–∏–∏', callback_data='strategies')
        btn_subjects555 = types.InlineKeyboardButton('–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤', callback_data='expect')                                                                                                                                                                
        btn_sources555 = types.InlineKeyboardButton('–í–∞–∂–Ω–æ', callback_data='important')

        markup.row(btn_subjects5)
        markup.row(btn_sources5)
        markup.row(btn_sources55)
        markup.row(btn_subjects555)
        markup.row(btn_sources555)

        bot.send_message(message.chat.id, DOCUM_TEXT, parse_mode='html', reply_markup=markup)

    elif user_message == '—Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤':
        markup = types.InlineKeyboardMarkup()
        btn_motiv = types.InlineKeyboardButton('–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —ç—Å—Å–µ', callback_data='motivational_letter')
        btn_recom = types.InlineKeyboardButton('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ –ø–∏—Å—å–º–æ', callback_data="recomendational_letter")                                                                                                                                                                  
        btn_trans = types.InlineKeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –¥–∏–ø–ª–æ–º–∞', callback_data="diploma_translation")
        btn_resum = types.InlineKeyboardButton('–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑—é–º–µ', callback_data="academic_resume")
        btn_common = types.InlineKeyboardButton('–°ommonApp', callback_data="common_app")
        btn_cssprof = types.InlineKeyboardButton('CSS Profile', callback_data="css_profile")

        markup.add(btn_motiv)
        markup.add(btn_recom)
        markup.add(btn_trans)
        markup.add(btn_resum)
        markup.add(btn_common)
        markup.add(btn_cssprof)
      
        markup.add(types.InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ CommonApp', url = 'https://www.commonapp.org/'))
        markup.add(types.InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ CSS Profile', url = 'https://cssprofile.collegeboard.org/'))
        bot.send_message(message.chat.id,  DOCUMENTS, parse_mode='html', reply_markup=markup)

    elif user_message == '‚óÄÔ∏è–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':   
        markup = main_buttons(message)
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=markup)
    elif user_message == '/site':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–ü–æ—Å–µ—Ç–∏—Ç—å –≤–µ–± —Å–∞–π—Ç', url = 'https://fmsh.nis.edu.kz/'))
        bot.send_message(message.chat.id, 'üåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç', reply_markup=markup)
    elif user_message == '/connectwithprof':   
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞', url = 'https://wa.me/+77072700077'))
        bot.send_message(message.chat.id, '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ç–æ—Ä–æ–º(–ú–∞—Ä–∞—Ç –ê–ª–∏–±–µ–∫–æ–≤–∏—á)', reply_markup=markup)

    elif user_message == '/connectwithadmin':   
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞', url = 'https://wa.me/+77479394705'))
        bot.send_message(message.chat.id, '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ì–∞—É—Ö–∞—Ä –°–∞–ø–∞—Ä–≥–∞–ª–∏–µ–≤–Ω–æ–π!', reply_markup=markup)
    elif user_message == '–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≤—É–∑—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn_back = types.KeyboardButton('‚óÄÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        btn_sat = types.KeyboardButton('SAT')
        btn_gpa = types.KeyboardButton('GPA')
        btn_ielts = types.KeyboardButton('IELTS')
        btn_mesk = types.KeyboardButton('–ú–≠–°–ö(12 –∫–ª–∞—Å—Å)')
        btn_docs = types.KeyboardButton('–î–æ–∫—É–º–µ–Ω—Ç—ã')
        btn_types = types.KeyboardButton('–¢–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
        
        markup.add(btn_sat, btn_ielts)
        markup.add(btn_mesk, btn_gpa)
        markup.add(btn_docs, btn_types)
        markup.add(btn_back)
        bot.send_message(message.from_user.id, UNI_ADMISSION_STR, reply_markup=markup)
    else:
        markup = main_buttons(message)
        response = "–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞!"

        response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        # prompt=message.text,
        temperature=0.9,
        max_tokens=1000,
        top_p=1,
        frequency_penalty=0,
        presence_penalty=0.6,
        messages=[
        
        {"role": "user", "content": f"{message.text}"}]
        )
        bot.send_message(chat_id=message.from_user.id, text = response)
   

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'all_print':
        img = open('sources/image.jpg', 'rb')
        bot.send_document(callback.message.chat.id, img)
    elif callback.data == 'shanyrak':
        doc_1 = open('sources/shanyrak.docx', 'rb')
        bot.send_document(callback.message.chat.id, doc_1)
    elif callback.data == 'tutor':
        doc_2 = open('sources/tutor.docx', 'rb')
        bot.send_document(callback.message.chat.id, doc_2)
   
    else:
        bot.send_message(callback.message.chat.id, callback_functions_dict[callback.data], parse_mode='html')


   
        
bot.polling() #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
